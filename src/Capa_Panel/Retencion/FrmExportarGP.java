/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Capa_Panel.Retencion;

import Capa_Entidades.EComprobante;
import Capa_Panel.Exportar.*;
import Capa_Entidades.EParametro;
import Capa_Entidades.EPeriodo;
import Capa_Entidades.EProgPagosCabecera;
import Capa_Logica.LComprobante;
import Capa_Logica.LParametro;
import Capa_Logica.LProgPagosCabecera;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author EXPERTYA
 */
public class FrmExportarGP extends javax.swing.JFrame {
    DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
    ArrayList<EPeriodo> lstperiodo = new ArrayList<>();
    ArrayList<EProgPagosCabecera> lstcab=new ArrayList<>();
    ArrayList<EComprobante> lstcomprobante=new ArrayList<>();
    EParametro objpar=new EParametro();
    int correlativo=0;
    /**
     * Creates new form FrmExportar
     */
    public FrmExportarGP() {
        initComponents();
        this.setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/img/Santander.png")).getImage());
        this.setTitle("EXPORTAR REGISTROS A GP");
        rbtpagos.setSelected(true);
        parametros();
        llenarcbopagos();
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        rbtretencin.setVisible(false);
    }

    private void parametros(){
        LParametro lp=new LParametro();
        objpar=lp.ListaParametros().get(0);
}
    
    private void llenarcbopagos(){
        LProgPagosCabecera lpc=new LProgPagosCabecera();
        lstcab=lpc.listacabparagp();
        cboprogramacion.removeAllItems();
        cboprogramacion.addItem("Seleccione");
        for (int i = 0; i < lstcab.size(); i++) {
            cboprogramacion.addItem(lstcab.get(i).getFecha()+ " | "+lstcab.get(i).getMoneda()+ " | "+lstcab.get(i).getBanco());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgfiltro = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtruta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rbtretencin = new javax.swing.JRadioButton();
        rbtpagos = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtcorrelativo = new javax.swing.JTextField();
        txtchequera = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtlote = new javax.swing.JTextField();
        cboprogramacion = new javax.swing.JComboBox();
        rbtdetraccion = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dcdetracc = new com.toedter.calendar.JDateChooser();
        txtnroope = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 0, 0));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EXPORTAR REGISTROS A GP");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 18));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel2.setText("Ruta");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, 20));

        txtruta.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(txtruta, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 220, -1));

        jButton1.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, -1, 22));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/export.png"))); // NOI18N
        jButton2.setText("Exportar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 210, 40));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel4.setText("Tipo");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 50, -1, 20));

        rbtretencin.setBackground(new java.awt.Color(255, 255, 255));
        bgfiltro.add(rbtretencin);
        rbtretencin.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        rbtretencin.setText("Retencion");
        jPanel1.add(rbtretencin, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, -1, -1));

        rbtpagos.setBackground(new java.awt.Color(255, 255, 255));
        bgfiltro.add(rbtpagos);
        rbtpagos.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        rbtpagos.setText("Pagos");
        jPanel1.add(rbtpagos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, -1, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel5.setText("Lote");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, 20));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel6.setText("Programaci√≥n");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 80, -1, 20));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel7.setText("Chequera");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 20));

        txtcorrelativo.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(txtcorrelativo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 90, -1));

        txtchequera.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(txtchequera, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 260, -1));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel8.setText("NRO. OPE");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, -1, 20));

        txtlote.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(txtlote, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 90, -1));

        cboprogramacion.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        cboprogramacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboprogramacionItemStateChanged(evt);
            }
        });
        jPanel1.add(cboprogramacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 260, -1));

        rbtdetraccion.setBackground(new java.awt.Color(255, 255, 255));
        bgfiltro.add(rbtdetraccion);
        rbtdetraccion.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        rbtdetraccion.setText("Detraccion");
        rbtdetraccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtdetraccionItemStateChanged(evt);
            }
        });
        jPanel1.add(rbtdetraccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, -1));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel9.setText("Correlativo");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 20));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel10.setText("Fec. Detracc.");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, 20));

        dcdetracc.setBackground(new java.awt.Color(255, 255, 255));
        dcdetracc.setEnabled(false);
        dcdetracc.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(dcdetracc, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, -1, -1));

        txtnroope.setEditable(false);
        txtnroope.setBackground(new java.awt.Color(255, 255, 255));
        txtnroope.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jPanel1.add(txtnroope, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 90, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String fechaformateador(Date fecha){
    String fechanaci=new SimpleDateFormat("dd-MM-yyyy").format(fecha);
    return fechanaci;
    }
    
    private boolean ValidarNumero(String numero){
        try {
            Integer.parseInt(numero);
            if (Integer.parseInt(numero) > 0) {
                return true;
            } else {
                return false;
            }
        } catch (NumberFormatException nfe) {
            return false;
        }
    }
    
    private boolean Validar(){
        int val = 0;
        if (txtchequera.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Ingrese Chequera.");
            txtchequera.requestFocus();
        } else {
            if (txtcorrelativo.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Ingrese Correlativo.");
                txtcorrelativo.requestFocus();
            } else {
                if (ValidarNumero(txtcorrelativo.getText().trim())) {
                    if (txtlote.getText().trim().length() == 0) {
                        JOptionPane.showMessageDialog(this, "Ingrese Lote.");
                        txtlote.requestFocus();
                    } else {
                        val = 1;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Valor ingresado debe ser numerico.");
                }
            }
        }
        if (val == 1) {
            return true;
        } else {
            return false;
        }
    }
    
    private String CorrelativoString(int correlativo){
        String cor="";
        if(correlativo>=1 && correlativo<=9){
            cor="0000000000000000000"+correlativo;
        }
        if(correlativo>=10 && correlativo<=99){
            cor="000000000000000000"+correlativo;
        }
        if(correlativo>=100 && correlativo<=999){
            cor="00000000000000000"+correlativo;
        }
        if(correlativo>=1000 && correlativo<=9999){
            cor="0000000000000000"+correlativo;
        }
        if(correlativo>=10000 && correlativo<=99999){
            cor="000000000000000"+correlativo;
        }
        if(correlativo>=100000 && correlativo<=999999){
            cor="00000000000000"+correlativo;
        }
        if(correlativo>=1000000 && correlativo<=9999999){
            cor="0000000000000"+correlativo;
        }
        if(correlativo>=10000000 && correlativo<=99999999){
            cor="000000000000"+correlativo;
        }
        if(correlativo>=100000000 && correlativo<=999999999){
            cor="00000000000"+correlativo;
        }
        return cor;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser jF1 = new javax.swing.JFileChooser();
        String ruta = "";
        try {
                jF1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                if (jF1.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                    ruta = jF1.getSelectedFile().getAbsolutePath();
                    String nombrearchivo="";
                    if(rbtpagos.isSelected()){
                        nombrearchivo="PAGOS"; 
                    }else{
                        if(rbtdetraccion.isSelected()){
                        nombrearchivo="DETRACCION";    
                        }else{
                        nombrearchivo="RETENCION";        
                        }
                    }
                txtruta.setText(ruta +"\\"+ nombrearchivo+".mac");
            }
        } catch (Exception ex) {
            ex.getMessage();
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    @SuppressWarnings("ConvertToTryWithResources")
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DecimalFormat formato = new DecimalFormat("##0.00", simbolo);
        if (txtruta.getText().trim().length() > 0) {
            String nombrearchivo = "";
            int ultimoslash = txtruta.getText().trim().lastIndexOf("\\") + 1;
            if (ultimoslash > 0) {
                nombrearchivo = txtruta.getText().trim().substring(ultimoslash, txtruta.getText().trim().length());
                File archivo = new File(txtruta.getText().trim());
                int opc=0;
                try {
                    String sujeto="";
                    if(rbtpagos.isSelected()){
                        sujeto="SIN RET/DET";
                        opc=1;
                    }
                    if(rbtretencin.isSelected()){
                        sujeto="RETENCION";
                        opc=3;
                    }
                    if(rbtdetraccion.isSelected()){
                        sujeto="DETRACCION";
                        opc=2;
                    }
                    LProgPagosCabecera lpc=new LProgPagosCabecera();
                    if(cboprogramacion.getSelectedIndex()==0){
                        JOptionPane.showMessageDialog(this, "Seleccione Programaci√≥n.");
                        cboprogramacion.requestFocus();
                    }else{
                        lstcomprobante=lpc.lstdetalleagp(lstcab.get(cboprogramacion.getSelectedIndex()-1).getCod_programacion(),sujeto);
                    }
                     String moneda = "";
                    if (cboprogramacion.getSelectedIndex() > 0) {
                        int indice = -1;
                        moneda = cboprogramacion.getSelectedItem().toString();                        
                        indice = moneda.indexOf("\\|");
                        moneda = moneda.trim().split("\\|")[1].trim(); //substring(indice + 2, moneda.trim().length());
                        System.out.println("PASO AQUI 2" + moneda);
                    }
                    String cta = "";
                    if (moneda.equalsIgnoreCase("SOLES")) {
                        cta = objpar.getCTAConSol().trim();
                    } else {
                        cta = objpar.getCTAConDol().trim();
                    }
                    if (lstcomprobante.size() > 0) {
                        if (Validar()) {
                            LParametro lp = new LParametro();
                            int cordetracc=0;
                            correlativo = Integer.valueOf(txtcorrelativo.getText().trim());
                            System.out.println("CORR: " + txtcorrelativo.getText().trim());
                            String fechapago= lstcab.get(cboprogramacion.getSelectedIndex()-1).getFecha();
                            String chequera = txtchequera.getText().trim().toUpperCase();
                            String lote = txtlote.getText().trim().toUpperCase();
                            if(opc==2){
                            cordetracc=Integer.valueOf(txtnroope.getText().trim());    
                            }
                            FileWriter escribir = new FileWriter(archivo, true);
                            for (int i = 0; i < lstcomprobante.size(); i++) {
                                lpc.ActualizarAContabilizado(lstcomprobante.get(i).getNumComprobante());
                                escribir.write("# DEXVERSION=11.00.0349.000 2 2");
                                escribir.write("\r\n");                                
                                escribir.write("CheckActiveWin dictionary 'default'  form 'PM_Manual_Payments' window 'PM_Manual_Payments'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Document Date'");
                                escribir.write("\r\n");                              
                                if(opc==2){
                                escribir.write(" TypeTo field 'Document Date' , '" + fechaformateador(dcdetracc.getDate()).replace("-", "") + "'");    
                                }else{
                                escribir.write(" TypeTo field 'Document Date' , '" + fechapago.trim().replace("-", "") + "'");    
                                }
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Batch Number'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Batch Number' , '" + lote + "'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Vendor ID'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Vendor ID' , '" + lstcomprobante.get(i).getDocProveedor().trim() + "'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Currency ID'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Currency ID' , ");
                                if (moneda.equalsIgnoreCase("SOLES")) {
                                    escribir.write("'NUEVO SOL'");
                                } else {
                                    escribir.write("'US DOLLAR'");
                                }
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Checkbook ID'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Checkbook ID' , ");
                                escribir.write("'" + chequera + "'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Document Number'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field '(L) Payment Entry Type 2' item 0  # 'Cheque'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Checkbook ID'");
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Document Number'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Document Number' , '");
                                escribir.write(CorrelativoString(correlativo));
                                correlativo = correlativo + 1;
                                escribir.write("'");
                                escribir.write("\r\n");                                
                                if (moneda.equalsIgnoreCase("SOLES")) {
                                    escribir.write(" MoveTo field 'Document Amount'");
                                    escribir.write("\r\n");                                    
                                    escribir.write(" TypeTo field 'Document Amount' , '");
                                    if(opc==1){
                                    escribir.write(formato.format(lstcomprobante.get(i).getMontoPagar()).trim().replace(".", ""));    
                                    }else{
                                    escribir.write(formato.format(lstcomprobante.get(i).getMontoRetDet()).trim().replace(".", ""));        
                                    }
                                    escribir.write("'");
                                } else {
                                    escribir.write(" MoveTo field 'Originating Document Amount'");
                                    escribir.write("\r\n");                                    
                                    escribir.write(" TypeTo field 'Originating Document Amount' , '");
                                    if(opc==1){
                                    escribir.write(formato.format(lstcomprobante.get(i).getMontoPagarDOL()).trim().replace(".", ""));
                                    }else{
                                    escribir.write(formato.format(lstcomprobante.get(i).getMontoRetDet()).trim().replace(".", ""));    
                                    }
                                    escribir.write("'");
                                }
                                escribir.write("\r\n");                                
                                escribir.write(" MoveTo field 'Transaction Description'");
                                escribir.write("\r\n");                                
                                escribir.write(" TypeTo field 'Transaction Description' ,'");
                                if(rbtdetraccion.isSelected()){
                                escribir.write("DET." + lstcomprobante.get(i).getGlosaComprante().trim());
                                }else if(rbtpagos.isSelected()){
                                escribir.write(lstcomprobante.get(i).getGlosaComprante().trim());
                                }
                                
                                escribir.write("'");
                                escribir.write("\r\n");
                                if (moneda.equalsIgnoreCase("SOLES")) {
                                    escribir.write(" MoveTo field 'Apply Button'");
                                    escribir.write("\r\n");
                                }
                                escribir.write(" MoveTo field 'Distribution Button'");
                                escribir.write("\r\n");
                                escribir.write(" ClickHit field 'Distribution Button'");
                                escribir.write("\r\n");
                                escribir.write("NewActiveWin dictionary 'default'  form 'PM_Transaction_Entry_Distribution' window 'PM_Transaction_Entry_Distribution'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '16384'");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool1'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write("  TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool1' ,'");
                                //escribir.write(cta.substring(0, 2));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(0,4));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: '', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool2'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool2' , '");
                                //escribir.write(cta.substring(3, 5));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(5,7));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool3'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool3' , '");
                                //escribir.write(cta.substring(6, 8));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(8,10));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool4'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool4' , '");
                                //escribir.write(cta.substring(9, 11));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(11,13));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool5'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool5' , '");
                                //escribir.write(cta.substring(12, 14));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(14,16));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool6'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool6' , '");
                                //escribir.write(cta.substring(12, 14));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(17,19));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool7'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" TypeTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool7' , '");
                                //escribir.write(cta.substring(12, 14));
                                escribir.write(lstcomprobante.get(i).getNroCuentaContable().substring(20,22));
                                escribir.write("'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Distribution Type' item 2  # 'PAGO'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                escribir.write(" ClickHit line 2 scrollwin 'Distribution_Scroll' field 'Distribution Type' item 2  # 'PAGO'");
                                escribir.write("\r\n");
                                escribir.write("# Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                if (moneda.equalsIgnoreCase("SOLES")) {
                                    escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Debit Amount'");                                    
                                } else {
                                    escribir.write(" MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Originating Debit Amount'");                                    
                                }
                                escribir.write("\r\n");
                                escribir.write(" # Key 1: 'PAG0000000075', '1', '', '0', '32768'");
                                escribir.write("\r\n");
                                if (moneda.equalsIgnoreCase("SOLES")) {
                                    escribir.write("   MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Credit Amount'");
                                } else {
                                    escribir.write("   MoveTo line 2 scrollwin 'Distribution_Scroll' field 'Originating Credit Amount'");
                                }
                                escribir.write("\r\n");
                                escribir.write("  TransLinePrepare scrollwin 'Distribution_Scroll'");
                                escribir.write("\r\n");
                                escribir.write(" # Key 1:");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo line 3 scrollwin 'Distribution_Scroll' field 'Distribution Account Number':'Account_Segment_Pool1'");
                                escribir.write("\r\n");
                                escribir.write("  MoveTo field 'OK Button'");
                                escribir.write("\r\n");
                                escribir.write("  ClickHit field 'OK Button'");
                                escribir.write("\r\n");
                                escribir.write("NewActiveWin dictionary 'default'  form 'PM_Manual_Payments' window 'PM_Manual_Payments'");
                                escribir.write("\r\n");
                                if(opc==2){
                                    escribir.write("MenuSelect title Adicional entry 'Constancia Detracci√≥n'");
                                    escribir.write("\r\n"); 
                                    escribir.write("NewActiveWin dictionary 'Extender'  form 'PT_UD_Window_1' window 'User Defined Window'");
                                    escribir.write("\r\n");
                                    escribir.write(" TypeTo field 'User Defined Long String'[1] , '"+cordetracc+"'");
                                    escribir.write("\r\n");
                                    cordetracc=cordetracc+1;
                                }
                                escribir.write(" MoveTo field 'Save Button'");
                                escribir.write("\r\n");
                                escribir.write(" ClickHit field 'Save Button'");
                                escribir.write("\r\n");
                            }
                            escribir.close();
                            JOptionPane.showMessageDialog(this, "Se export√≥ correctamente el archivo " + nombrearchivo + ".");
                            lp.ActualizarCorrelativo(correlativo);
                            llenarcbopagos();
                            txtruta.setText("");
                            txtchequera.setText("");
                            txtcorrelativo.setText("");
                            txtlote.setText("");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "No cuenta con datos para exportar.");
                    }
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                    Logger.getLogger(FrmExportar.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ruta Indicada no es v√°lida.");
                txtruta.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione Ruta de Archivo.");
            txtruta.requestFocus();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cboprogramacionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboprogramacionItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboprogramacionItemStateChanged

    private void rbtdetraccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtdetraccionItemStateChanged
        // TODO add your handling code here:
        if(rbtdetraccion.isSelected()){
            txtnroope.setEditable(true);
            txtnroope.setEnabled(true);
            dcdetracc.setEnabled(true);
        }else{
            txtnroope.setEditable(false);
            txtnroope.setEnabled(false);
            dcdetracc.setEnabled(false);
        }
    }//GEN-LAST:event_rbtdetraccionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmExportar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmExportar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmExportar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmExportar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmExportar().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgfiltro;
    private javax.swing.JComboBox cboprogramacion;
    private com.toedter.calendar.JDateChooser dcdetracc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton rbtdetraccion;
    private javax.swing.JRadioButton rbtpagos;
    private javax.swing.JRadioButton rbtretencin;
    private javax.swing.JTextField txtchequera;
    private javax.swing.JTextField txtcorrelativo;
    private javax.swing.JTextField txtlote;
    private javax.swing.JTextField txtnroope;
    private javax.swing.JTextField txtruta;
    // End of variables declaration//GEN-END:variables
}
