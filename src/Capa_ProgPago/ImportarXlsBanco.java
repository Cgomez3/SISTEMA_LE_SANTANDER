/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Capa_ProgPago;

import Capa_Entidades.EComprobProcesados;
import Capa_Entidades.EComprobante;
import Capa_Logica.LComprobante;
import Capa_Logica.LProgPagosCabecera;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListCellRenderer;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import jxl.Sheet;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.biff.CountryCode;
import jxl.read.biff.BiffException;

/**
 *
 * @author HOME
 */
public class ImportarXlsBanco extends javax.swing.JInternalFrame {
    String estado = "SOLES";
    ArrayList<EComprobProcesados> lstcomp = new ArrayList<>();
    String titulos[] = {"DocProveedor","Proveedor","Tipo de Comprobante", "NroComprobante", "Moneda", 
        "MontoTotal", "TipoCuenta","NroCuenta", "Estado", "Observacion"};
    DefaultTableModel modTbdatos = new DefaultTableModel(titulos, 0);
    DecimalFormatSymbols simbolo = new DecimalFormatSymbols();
    Object[] cboobj = new Object[6];
    /**
     * Creates new form ImportarComprobantes
     */
    public ImportarXlsBanco() {
        initComponents();
        this.setTitle("Importar Xls Comprobantes Procesados.");
        setFrameIcon(new ImageIcon(getClass().getResource("/img/Santander.png")));
        tblistacomprobantes.setModel(modTbdatos);
        tblistacomprobantes.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        simbolo.setDecimalSeparator('.');
        simbolo.setGroupingSeparator(',');
        tblistacomprobantes.getTableHeader().setReorderingAllowed(false);
        rbtprocesar.setSelected(true);
    }

    
     class MyCellRenderer extends JLabel implements ListCellRenderer<Object>{
        public MyCellRenderer() 
     {
         setOpaque(true);
     }

        @Override
        public Component getListCellRendererComponent(JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
          setText(value.toString());
         return this;
        }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private String mifecha(String cad){
        String nfecha="";
        nfecha=cad.substring(0, 2)+"-"+cad.substring(3, 5)+"-20"+cad.substring(6, 8);
        return nfecha;
    }
    
    private void llenartabla() {
        DecimalFormat formato = new DecimalFormat("###, ##0.00", simbolo);
        //DecimalFormat formato2 = new DecimalFormat("#0.000", simbolo);
        modTbdatos.setRowCount(0);
        if(lstcomp.size()>0){
//            "DocProveedor","Proveedor","Tipo de Comprobante", "NroComprobante", "Moneda", 
//        "MontoTotal", "TipoCuenta","NroCuenta", "Estado", "Observacion"
            for (int i = 0; i < lstcomp.size(); i++) {
                Object obj[]=new Object[10];
                obj[0]=lstcomp.get(i).getDocProveedor().trim();
                obj[1]=lstcomp.get(i).getProveedor().trim();
                obj[2]=lstcomp.get(i).getTipoComprobante().trim();
                obj[3]=lstcomp.get(i).getNroComprobante().trim();
                obj[4]=lstcomp.get(i).getMoneda().trim();
                obj[5]=formato.format(lstcomp.get(i).getMontoTotal());
                obj[6]=lstcomp.get(i).getTipoCuenta().trim();
                obj[7]=lstcomp.get(i).getNroCuenta().trim();
                obj[8]=lstcomp.get(i).getEstado().trim();
                obj[9]=lstcomp.get(i).getObservacion().trim();
                modTbdatos.addRow(obj);
            }
        }
        tblistacomprobantes.setModel(modTbdatos);
        lblnroregistros.setText(tblistacomprobantes.getRowCount()+" Comprobante(s)");
    }
    
     public boolean esNumeroDecimal(String cad) {
        try {
            Double.parseDouble(cad);
            return true;
        } catch (NumberFormatException nfe) {
            System.out.println(nfe.toString());
            return false;
        }
    }
     
     private int validarextornar(){
         int extornar=0;
         LProgPagosCabecera lp=new LProgPagosCabecera();
         if(lstcomp.size()>0){
             for (int i = 0; i < lstcomp.size(); i++) {
                 extornar=extornar+lp.ComprobarExtornar(lstcomp.get(i));
             }
         }
         return extornar;
     }
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgaccion = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txturl = new javax.swing.JTextField();
        btnimportar = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        btnsalir1 = new javax.swing.JButton();
        lblmoneda = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblistacomprobantes = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column) {
                if (column == 0){
                    return true;
                }else{
                    return false;
                }
            }
        };
        lblnroregistros = new javax.swing.JLabel();
        rbtextornar = new javax.swing.JRadioButton();
        rbtprocesar = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jPanel2.setBackground(new java.awt.Color(255, 0, 15));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("IMPORTAR XLS COMPROBANTES PROCESADOS ");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        txturl.setEditable(false);
        txturl.setBackground(new java.awt.Color(255, 255, 255));
        txturl.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        btnimportar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnimportar.setText("Importar");
        btnimportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimportarActionPerformed(evt);
            }
        });

        btnguardar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnguardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guardar.png"))); // NOI18N
        btnguardar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnguardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnsalir1.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnsalir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/salir.png"))); // NOI18N
        btnsalir1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        btnsalir1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnsalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalir1ActionPerformed(evt);
            }
        });

        lblmoneda.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Moneda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 10))); // NOI18N

        tblistacomprobantes.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        tblistacomprobantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblistacomprobantes);

        lblnroregistros.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        lblnroregistros.setText("Nro Registros");

        rbtextornar.setBackground(new java.awt.Color(255, 255, 255));
        bgaccion.add(rbtextornar);
        rbtextornar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        rbtextornar.setText("Extornar");

        rbtprocesar.setBackground(new java.awt.Color(255, 255, 255));
        bgaccion.add(rbtprocesar);
        rbtprocesar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        rbtprocesar.setText("Procesar");

        jLabel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true), "Seleccionar Acción", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 10))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txturl, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnimportar)
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(lblmoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(rbtprocesar))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(80, 80, 80)
                                        .addComponent(rbtextornar)))
                                .addGap(26, 26, 26)
                                .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(btnsalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblnroregistros, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txturl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btnimportar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblmoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(rbtprocesar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(rbtextornar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnsalir1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblnroregistros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        if (lstcomp.size() > 0) {
            if(rbtprocesar.isSelected()){
            if (JOptionPane.showConfirmDialog(this, "Se grabarán los Comprobantes Procesados. ¿Desea Continuar?", "Confirmar", JOptionPane.YES_NO_OPTION) == (JOptionPane.YES_OPTION)) {
                LProgPagosCabecera lp = new LProgPagosCabecera();
                for (int i = 0; i < lstcomp.size(); i++) {
                    if (lp.InsertProcesados(lstcomp.get(i))) {
                    }
                }
                JOptionPane.showMessageDialog(this, "Se GRABARON correctamente Comprobantes Procesados.");
            }    
            } else {
                if (validarextornar() == 0) {
                    JOptionPane.showMessageDialog(this, "No se puede extornar. La información debe ser procesada previamente.");
                } else {
                    if (JOptionPane.showConfirmDialog(this, "Se extornarán los Comprobantes Procesados. ¿Desea Continuar?", "Confirmar", JOptionPane.YES_NO_OPTION) == (JOptionPane.YES_OPTION)) {
                        LProgPagosCabecera lp = new LProgPagosCabecera();
                        for (int i = 0; i < lstcomp.size(); i++) {
                            if (lp.ExtornarProcesados(lstcomp.get(i))) {
                            }
                        }
                        JOptionPane.showMessageDialog(this, "Se EXTORNARON correctamente Comprobantes Procesados.");
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "No tiene data para grabar.");
        }
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnsalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalir1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnsalir1ActionPerformed

    private void btnimportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimportarActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser jF1 = new javax.swing.JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("XLS files", "xls");
        jF1.setFileFilter(filtro);
        String ruta = "";
        try {
            if (jF1.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                ruta = jF1.getSelectedFile().getAbsolutePath();
                System.out.println(ruta);
                txturl.setText(ruta);
                WorkbookSettings wbSettings = new WorkbookSettings();
                wbSettings.setEncoding("ISO-8859-1");
                wbSettings.setLocale(new Locale("es", "ES"));
                wbSettings.setExcelDisplayLanguage("ES");
                wbSettings.setExcelRegionalSettings("ES");
                wbSettings.setCharacterSet(CountryCode.SPAIN.getValue());
                Workbook workbook = Workbook.getWorkbook(new File(ruta), wbSettings);
                Sheet sheet = workbook.getSheet(0);
                lstcomp.removeAll(lstcomp);
                if (esNumeroDecimal(sheet.getCell(7, 1).getContents().toString().replace(".", "").replace(",", "."))) {
                    if (sheet.getCell(6, 1).getContents().toString().equalsIgnoreCase("US$")) {
                        lblmoneda.setText("DOLARES");
                        estado = "DOLARES";
                    } else {
                        lblmoneda.setText("SOLES");
                        estado = "SOLES";
                    }
                    for (int fila = 1; fila < sheet.getRows(); fila++) {
                        if(sheet.getCell(1,fila).getContents().toString().trim().length()>0){
                            EComprobProcesados ecom=new EComprobProcesados();
                        ecom.setProveedor(sheet.getCell(1, fila).getContents().toString().toUpperCase().trim());
                        ecom.setDocProveedor(sheet.getCell(3, fila).getContents().toString().trim());
                        ecom.setTipoComprobante(sheet.getCell(4, fila).getContents().toString().toUpperCase().trim());
                        ecom.setNroComprobante(sheet.getCell(5, fila).getContents().toString().trim());
                        ecom.setMoneda(estado);
                        ecom.setMontoTotal(Double.valueOf(sheet.getCell(7, fila).getContents().toString()));
                            switch (sheet.getCell(11, fila).getContents().toString()) {
                                case "C":
                                    ecom.setTipoCuenta("CORRIENTE");
                                    break;
                                case "B":
                                    ecom.setTipoCuenta("INTERBANCARIA");
                                    break;
                                case "A":
                                    ecom.setTipoCuenta("AHORRO");
                                    break;
                               case "M":
                                    ecom.setTipoCuenta("MAESTRA");
                                    break;
                            }
                        ecom.setNroCuenta(sheet.getCell(13, fila).getContents().toString().trim());
                        ecom.setEstado(sheet.getCell(14, fila).getContents().toString().toUpperCase().trim());
                        ecom.setObservacion(sheet.getCell(15, fila).getContents().toString().toUpperCase().trim());
                        lstcomp.add(ecom);
                        }
                    }
                    llenartabla();
                } else {
                    JOptionPane.showMessageDialog(this, "El archivo que intenta cargar no cuenta con el formato adecuado.");
                }
            }
        }catch (HeadlessException | IOException | BiffException | IndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "El archivo que intenta cargar no cuenta con el formato adecuado.");
            System.out.println(ex);
        }
        
    }//GEN-LAST:event_btnimportarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgaccion;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btnimportar;
    private javax.swing.JButton btnsalir1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblmoneda;
    private javax.swing.JLabel lblnroregistros;
    private javax.swing.JRadioButton rbtextornar;
    private javax.swing.JRadioButton rbtprocesar;
    private javax.swing.JTable tblistacomprobantes;
    private javax.swing.JTextField txturl;
    // End of variables declaration//GEN-END:variables
}
